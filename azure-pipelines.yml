name: $(Build.SourceBranch)_$(Build.BuildId)
variables:
  version: 0.$(Build.BuildId)
trigger:
- master
- refs/tags/v*

resources:
- repo: self
  fetchDepth: 1
pool:
  vmImage: windows-2019

steps:
- task: UseDotNet@0
  displayName: Install .NET Core SDK
  inputs:
    version: 2.x

- powershell: |
    if ($env:BUILD_SOURCEBRANCH -like "refs/tags/v*") {
      $ver = $env:BUILD_SOURCEBRANCHNAME.TrimStart("v")
      Write-Host "##vso[task.setvariable variable=version]$ver"
    }

- script: dotnet restore
  displayName: Restore

- script: dotnet build src --configuration $(BuildConfiguration)
  displayName: Build

- powershell: |
      dotnet test tests /p:CollectCoverage=true /p:CoverletOutputFormat="opencover" /p:CoverletOutput="$(System.DefaultWorkingDirectory)/tests/coverage/" /p:ExcludeByAttribute="ObsoleteAttribute" /p:Exclude="[xunit*]*" --logger trx
  displayName: Test
  env:
    DarkSkyApiKey: $(DarkSkyApiKey)

- powershell: |
      choco install codecov
      codecov.exe -f "$(System.DefaultWorkingDirectory)/tests/coverage/coverage.opencover.xml" -t "$(CODECOV_TOKEN)"
  displayName: Publish Coverage

- task: PublishTestResults@2
  displayName: Publish Tests
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- script: dotnet pack --configuration $(BuildConfiguration) --include-symbols /p:PackageVersion=$(version) -p:SymbolPackageFormat=snupkg -o $(Build.ArtifactStagingDirectory) src
  displayName: Pack

- task: PublishBuildArtifacts@1
  displayName: Publish Artifacts
